@-webkit-keyframes slideDown{0%{-webkit-transform:translateY(-100%);transform:translateY(-100%)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideDown{0%{-webkit-transform:translateY(-100%);transform:translateY(-100%)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@font-face{font-family:GTEestiProBold;src:url(../font/GTEestiProDisplay-Bold.woff2);font-weight:700}@font-face{font-family:GTEestiProRegular;src:url(../font/GTEestiProDisplay-Regular.woff2)}@font-face{font-family:GTEestiProLight;src:url(../font/GTEestiProDisplay-Light.woff2)}@font-face{font-family:GTEestiProThin;src:url(../font/GTEestiProDisplay-Thin.woff2)}*,a,li,p,span,ul{margin:0;padding:0;-webkit-box-sizing:border-box;box-sizing:border-box}body{background:-o-linear-gradient(85.79deg,#490b6f 41.68%,#1c2426 101.01%);background:linear-gradient(4.21deg,#490b6f 41.68%,#1c2426 101.01%);background-repeat:no-repeat;background-size:100%;font-family:GTEestiProRegular;font-weight:400;color:#fff;overflow-x:hidden}.footer{padding-bottom:80px}.footer::after,.footer::before{content:"";display:block;position:absolute;background:#180f9d;-webkit-filter:blur(580.5px);filter:blur(580.5px);width:1996px;height:1996px;left:-1370px;bottom:-700px;z-index:-1}.footer,.footer__block{position:relative}.footer__block::after{content:url(../img/footer__Graph.png);position:absolute;bottom:10px;left:50%}.footer__subtitle{font:350 16px/19px GTEestiProThin}.footer__sides{padding-top:60px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:105px}.footer__R__feedback{font:350 16px/19px GTEestiProThin;background:0 0;border:1px solid #fff;border-radius:17px;color:#fff;outline:0}.footer__R__feedback::-webkit-input-placeholder{color:rgba(255,255,255,.4)}.footer__R__feedback::-moz-placeholder{color:rgba(255,255,255,.4)}.footer__R__feedback:-ms-input-placeholder{color:rgba(255,255,255,.4)}.footer__R__feedback::-ms-input-placeholder{color:rgba(255,255,255,.4)}.footer__R__feedback::placeholder{color:rgba(255,255,255,.4)}.footer__feedback,.footer__feedback-name__tel{display:-webkit-box;display:-ms-flexbox;display:flex}.footer__feedback{font-family:GTEestiProThin;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.footer__feedback-name__tel{gap:20px}.footer__feedback-name,.footer__feedback-tel{padding:22px 0 23px 25px;width:335px}.footer__feedback-tel{width:350px}.footer__feedback-text{border-radius:17px;width:705px;height:195px;margin:30px 0;resize:none;padding:25px 0 0 25px}.footer__feedback-btn{font:16px/19px GTEestiProBold;background:#33caff;border-radius:10px;color:#fff;padding:15px 100px;text-align:start;width:-webkit-max-content;width:-moz-max-content;width:max-content;cursor:pointer;outline:0;border:0}.footer__L__side{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:end;-ms-flex-align:end;align-items:end}.footer__L-mail,.footer__L-tg{font-size:32px;line-height:37px;color:#fff;text-decoration:none}.footer__L-tg{margin:5px 0 25px}.footer__B__block,.footer__socmedia{display:-webkit-box;display:-ms-flexbox;display:flex}.footer__socmedia{gap:0 7px}.footer__B__block{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer__B__copyright{font:16px/19px GTEestiProThin}.footer__B__links{display:-webkit-box;display:-ms-flexbox;display:flex;gap:0 30px}.footer__B__links-link{font:16px/19px GTEestiProThin;color:#fff;text-decoration:none}.footer__B__links-link:last-child{padding-left:20px}header{padding:30px 20px 20px;position:relative;z-index:20;width:100%;top:0;left:0}header.is-sticky{position:fixed;-webkit-box-shadow:0 5px 16px rgba(0,0,0,.1);box-shadow:0 5px 16px rgba(0,0,0,.1);padding:30px 20px;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);-webkit-animation:slideDown .35s ease-out;animation:slideDown .35s ease-out}header.is-sticky::after{content:"";display:block;height:100%;width:100%;z-index:-1;background:#1a136d;background-size:cover;background-repeat:no-repeat;position:absolute;top:0;left:0}header .header__block .header__sides{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:370px}header .header__block .header__l__side,header .header__block .header__l__side .header__nav-menu .header__lists{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:0 45px}header .header__block .header__l__side .header__logo{z-index:15}header .header__block .header__l__side .header__nav-menu .header__lists{list-style:none;gap:0 30px}header .header__block .header__l__side .header__nav-menu .header__lists .header__list .header__list__link{text-decoration:none;font-weight:400;font-size:16px;line-height:19px;color:#fff}header .header__block .header__r__side .header__r__links{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:0 10px}header .header__block .header__r__side .header__r__links a{text-decoration:none;font-style:normal;font-weight:600;font-size:18px;line-height:140%}header .header__block .header__r__side .header__r__links .header__sign__in{background:#33caff;border-radius:10px;padding:15px 50px;position:relative;display:inline-block;-webkit-border-radius:10px;-moz-border-radius:10px;-ms-border-radius:10px;-o-border-radius:10px;color:#fff;font-family:GTEestiProBold;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}header .header__block .header__r__side .header__r__links .header__sign__up{font:16px/19px GTEestiProBold;color:#fff;padding:15px 22px;border:1px solid #fff;border-radius:10px;-webkit-border-radius:10px;-moz-border-radius:10px;-ms-border-radius:10px;-o-border-radius:10px}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList{background:0 0;position:relative;width:50px;outline:0}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList::before{content:"";position:absolute;top:0;left:30px;z-index:10;width:8px;height:8px;border:2px solid transparent;border-top:2px solid #fff;border-right:2px solid #fff;-webkit-transform:rotate(-225deg);-ms-transform:rotate(-225deg);transform:rotate(-225deg);-webkit-transition:.5s;-o-transition:.5s;transition:.5s;pointer-events:none}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList.active .options{background:0 0;display:block;z-index:10;cursor:pointer;color:#fff}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList.active .options .langshow{padding:10px}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList.active::before{top:5px;-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList .text-box{font-size:16px;line-height:19px;color:#fff;background:0 0;border:0;outline:0;width:50px;cursor:pointer}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList .text-box::-webkit-input-placeholder{color:#fff}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList .text-box::-moz-placeholder{color:#fff}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList .text-box:-ms-input-placeholder{color:#fff}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList .text-box::-ms-input-placeholder{color:#fff}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList .text-box::placeholder{color:#fff}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList .options{position:absolute;top:20px;width:100%;right:7px;background:#fff;-webkit-box-shadow:0 5px 20px rgba(0,0,0,.05);box-shadow:0 5px 20px rgba(0,0,0,.05);border-radius:10px;overflow:hidden;display:none}header .header__block .header__r__side .registration__btns{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;gap:10px}.hero__blocks-title br,header .header__block .header__r__side .registration__man{display:none}header .header__block .header__r__side .registration__man .registration__man__btn{background:0 0;width:25px;height:25px;padding:0;cursor:pointer;border:0}header .header__block .header__r__side .header__hamburger{display:none;background:#44a3ff;border-radius:10px;-webkit-border-radius:10px;-moz-border-radius:10px;-ms-border-radius:10px;-o-border-radius:10px;width:40px;height:40px}header .header__block .header__r__side .header__hamburger .header_hamburger-menu{background:0 0;border:0;cursor:pointer;display:-webkit-box;display:-ms-flexbox;display:flex;padding:0;width:40px;height:40px}header .header__block .header__r__side .header__hamburger .header_hamburger-menu svg{width:40px;height:40px}header .header__block .header__r__side .header__hamburger .line{fill:none;stroke:#000;stroke-width:6;-webkit-transition:stroke-dasharray 600ms cubic-bezier(.4,0,.2,1),stroke-dashoffset 600ms cubic-bezier(.4,0,.2,1);-o-transition:stroke-dasharray 600ms cubic-bezier(.4,0,.2,1),stroke-dashoffset 600ms cubic-bezier(.4,0,.2,1);transition:stroke-dasharray 600ms cubic-bezier(.4,0,.2,1),stroke-dashoffset 600ms cubic-bezier(.4,0,.2,1);border-radius:5px;-webkit-border-radius:5px;-moz-border-radius:5px;-ms-border-radius:5px;-o-border-radius:5px}header .header__block .header__r__side .header__hamburger .line1{stroke-dasharray:60 207;stroke-width:6}header .header__block .header__r__side .header__hamburger .line2{stroke-dasharray:60 60;stroke-width:6}header .header__block .header__r__side .header__hamburger .line3{stroke-dasharray:60 207;stroke-width:6}header .header__block .header__r__side .header__hamburger .opened .line1{stroke-dasharray:90 207;stroke-dashoffset:-134;stroke-width:6}header .header__block .header__r__side .header__hamburger .opened .line2{stroke-dasharray:1 60;stroke-dashoffset:-30;stroke-width:6}header .header__block .header__r__side .header__hamburger .opened .line3{stroke-dasharray:90 207;stroke-dashoffset:-134;stroke-width:6}.hero{padding-top:100px;padding-bottom:55px}.hero::before{display:block;width:1270px;height:1270px;background:#180f9d;-webkit-filter:blur(580.5px);filter:blur(580.5px);left:-568px;top:159px}.hero::after,.hero::before,.hero__block::before{content:"";position:absolute;z-index:-1}.hero::after{display:block;width:980px;height:980px;left:959px;top:259px;background:#180f9d;-webkit-filter:blur(580.5px);filter:blur(580.5px)}.hero .hero__main__bg{position:absolute;top:-205px;-o-object-fit:contain;object-fit:contain;width:100%;z-index:-2}.hero,.hero__block{position:relative}.hero__block::before{background:url(../img/hero__figure.png) 0 0/cover;right:8.33%;top:-8.46%;width:494px;height:451px}.hero__block::after{content:"";display:block;position:absolute;width:2267px;height:190px;left:-499px;top:650px;background:-o-linear-gradient(258.67deg,#1d56ba 8.34%,#1a1535 202.88%);background:linear-gradient(191.33deg,#1d56ba 8.34%,#1a1535 202.88%);filter:blur(27px);z-index:-1;-webkit-filter:blur(27px)}.hero__main__title{font:83px/120% GTEestiProRegular;margin:110px 0 177px}.hero__blocks-title{font-size:32px;line-height:37px;text-align:justify}.hero__blocks-cards{display:-webkit-box;display:-ms-flexbox;display:flex;gap:0 20px;padding-top:30px;position:relative}.hero__blocks-cards::before{background:url(../img/hero__hands__with__laptop.png) 0 0/contain;content:"";width:457px;height:500px;display:block;position:absolute;top:-74px;right:-60px}.hero__blocks-card{border:1px solid #fff;border-radius:27px;padding:25px 20px 45px;max-width:285px}.hero__card__numb{font-size:32px;line-height:37px;text-align:justify}.hero__card__text{font:16px/19px GTEestiProThin;padding-top:12px}.news{padding-bottom:120px;position:relative}.news::before{content:"";display:block;position:absolute;background:#180f9d;-webkit-filter:blur(580.5px);filter:blur(580.5px);width:1176px;height:1176px;right:-750px;bottom:0;z-index:-1}.news::after{content:url(../img/news__img_grad.png);position:absolute;top:-170px;left:15px}.news .news__waves__bg{position:absolute;top:-230px;left:0;z-index:-1;width:100%}.news__card,.news__cards{display:-webkit-box;display:-ms-flexbox;display:flex}.news__cards{margin-top:55px;gap:0 20px}.news__card{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.news__time{font:16px/19px GTEestiProLight;margin-bottom:22px}.news__title{font-size:32px;line-height:37px;text-align:justify;margin-bottom:13px}.news__text{font:16px/19px GTEestiProLight}.newsMain__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:10px 0}.newsMain-name{font-weight:400;font-size:83px;line-height:120%;margin-left:0}.newsMain__content-text{font:350 16px/25px GTEestiProLight;color:#fff}.newsMain__content-sides{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;-webkit-box-align:start;-ms-flex-align:start;align-items:start;gap:15px}.newsMain__content-sides .newsMain__content-text{width:65%}.newsMain__content-img{width:40%}.newsMain__content-img .news__cont__img{-o-object-fit:cover;object-fit:cover;width:100%}.newsmain__Navigation{font:350 16px/19px GTEestiProLight;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;padding:105px 0 75px;gap:0 5px}.newsmain__Navigation-main,.newsmain__Navigation-news{text-decoration:none;color:#fff}.swiper-slide.newsMain__item{border:0;padding:0 20px 0 0}.swiper-slide .newsMain-name{margin-left:0;margin-bottom:30px}.swiper.main__news__swiper{padding-top:0}.swiper-button-next.newsMain-next,.swiper-button-prev.newsMain-prev{top:var(--swiper-navigation-top-offset, 50%);-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-decoration:none;color:#fff;width:-webkit-max-content;width:-moz-max-content;width:max-content}.swiper-button-next.newsMain-next{right:var(--swiper-navigation-sides-offset, 150px);transform:rotate(0deg);-webkit-transform:rotate(0deg);-moz-transform:rotate(0deg);-ms-transform:rotate(0deg);-o-transform:rotate(0deg);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.swiper-button-next.newsMain-next::after{content:url(../img/swiper__left__btn.png);display:block;position:absolute;bottom:-70px;left:80px;transform:rotate(180deg);-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);-ms-transform:rotate(180deg);-o-transform:rotate(180deg)}.swiper-button-prev.newsMain-prev{left:var(--swiper-navigation-sides-offset, 150px)}.swiper-button-prev.newsMain-prev::after{content:url(../img/swiper__left__btn.png);display:block;position:absolute;bottom:-75px;right:80px}.our__possibilities{padding-top:55px;padding-bottom:70px}.our__possibilities__block,.our__possibilities__cards,.swiper-button-prev.newsMain-prev{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.our__possibilities__block{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.our__possibilities__cards{padding:55px 0 30px;gap:20px;-ms-flex-wrap:wrap;flex-wrap:wrap}.our__possibilities__card{padding:15px 34px 0 32px;border:1px solid #fff;border-radius:27px;max-width:calc(50% - 10px);height:235px}.our__possibilities__card.our__possibilities__card07 .our__possibilities__card__top{padding-bottom:35px}.our__possibilities__card__top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-bottom:15px}.our__possibilities__card__top-span{font-size:32px;line-height:37px;text-align:justify}.our__possibilities__card__text{font:300 16px/19px GTEestiProThin}.our__possibilities__links__card{padding:25px 0 30px 25px;border:1px solid #fff;border-radius:27px;margin-bottom:55px;width:100%}.our__possibilities__links__card-span{font:700 16px/19px GTEestiProBold}.our__possibilities__links__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;gap:10px;margin-top:10px;width:75%}.our__possibilities__link__list-link{background:#fff;text-decoration:none;color:#000;padding:5px 44px;border-radius:36px;font-size:16px;line-height:19px}.our__possibilities__btn{font:16px/19px GTEestiProBold;background:#33caff;text-decoration:none;text-align:center;padding:15px 72px;border-radius:10px;color:#fff}.questandans{padding-bottom:80px}.questandans .questandans__bg{position:absolute;top:-570px;left:auto;z-index:-1;width:100%;-o-object-fit:cover;object-fit:cover}.questandans,.reviews,.reviews__block{position:relative}.reviews::before,.wrapper.news__wrapper::after,.wrapper.news__wrapper::before{content:"";display:block;position:absolute;background:#180f9d;-webkit-filter:blur(580.5px);filter:blur(580.5px);z-index:-1}.reviews::before{width:1176px;height:1176px;right:-750px;top:0}.reviews__img{position:absolute;left:31px;top:-51px}.reviews__block__name{font-size:32px;line-height:37px;text-align:justify}.reviews__block__job{font-weight:350;font-size:16px;line-height:19px;margin:5px 0 30px}.swiper{padding-top:90px;padding-bottom:180px;position:static}.swiper-slide{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:25px 40px;position:relative;border:1px solid #fff;border-radius:27px}.swiper-slide span{margin-left:150px}.swiper-button-next{transform:rotate(180deg);-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);-ms-transform:rotate(180deg);-o-transform:rotate(180deg);right:var(--swiper-navigation-sides-offset, -15px)}.swiper-button-next::after,.swiper-button-prev::after,.wrapper.news__wrapper .news::after{display:none}.swiper-button-prev{left:var(--swiper-navigation-sides-offset, -15px)}.swiper-pagination{bottom:var(--swiper-pagination-bottom, 100px)!important}.swiper-button-next,.swiper-button-prev{top:var(--swiper-navigation-top-offset, 43%)}.swiper-button-next.swiper-button-disabled,.swiper-button-prev.swiper-button-disabled{opacity:1}.swiper-pagination-bullet{width:var(--swiper-pagination-bullet-width, var(--swiper-pagination-bullet-size, 16px));height:var(--swiper-pagination-bullet-height, var(--swiper-pagination-bullet-size, 16px));background:0 0;border:1px solid #fff;opacity:1}.swiper-pagination-bullet-active{background:#33caff}@font-face{font-family:GTEestiProBold;src:url(../font/GTEestiProDisplay-Bold.woff2);font-weight:700}@font-face{font-family:GTEestiProRegular;src:url(../font/GTEestiProDisplay-Regular.woff2)}@font-face{font-family:GTEestiProLight;src:url(../font/GTEestiProDisplay-Light.woff2)}@font-face{font-family:GTEestiProThin;src:url(../font/GTEestiProDisplay-Thin.woff2)}.main__title{font:81px/94px GTEestiProRegular;text-align:justify;color:#fff}.wrapper{position:relative;overflow:hidden}.wrapper.news__wrapper::after,.wrapper.news__wrapper::before{width:1270px;height:1270px;left:-568px;top:159px}.wrapper.news__wrapper::after{width:980px;height:980px;left:959px;top:259px}.wrapper.news__wrapper .hero__mask__bg{top:700px}.wrapper .hero__main__bg{height:982px;top:0;z-index:-3}.wrapper .hero__main__bg,.wrapper .news__waves__bg,.wrapper .questandans__bg{position:absolute;width:100%;left:0;-o-object-fit:cover;object-fit:cover}.wrapper .news__waves__bg{top:4750px;z-index:-3;transform:rotate(5deg);-webkit-transform:rotate(5deg);-moz-transform:rotate(5deg);-ms-transform:rotate(5deg);-o-transform:rotate(5deg)}.wrapper .questandans__bg{top:2320px;z-index:-2;opacity:.8;height:1108px;mix-blend-mode:lighten}.wrapper .questandans__bg.bg__newsMain__news{top:1150px}.wrapper .footer__burning__bg,.wrapper .tarrifs__3d__waves{position:absolute;-o-object-fit:cover;object-fit:cover;z-index:-3}.wrapper .tarrifs__3d__waves{left:-400px;top:2900px;width:150%;mix-blend-mode:lighten;transform:rotate(5deg);-webkit-transform:rotate(5deg);-moz-transform:rotate(5deg);-ms-transform:rotate(5deg);-o-transform:rotate(5deg)}.wrapper .footer__burning__bg{bottom:0;left:0;width:100%;height:982px;opacity:.3}.wrapper .hero__mask__bg,.wrapper .hero__mask__bg02{position:absolute;top:650px;left:0;z-index:-1;width:100%;-o-object-fit:cover;object-fit:cover}.wrapper .hero__mask__bg02{top:600px;z-index:-2}.tarrifs{padding-bottom:75px;position:relative}.tarrifs::after{content:url(../img/tarrifs__bg__figure.png);position:absolute;right:-70px;bottom:-170px;z-index:-1}.tarrifs .tarrifs__3d__waves{position:absolute;left:0;top:-700px;width:100%;z-index:-1}.tarrifs__block{padding-top:55px;position:relative}.tarrifs__item,.tarrifs__items{display:-webkit-box;display:-ms-flexbox;display:flex}.tarrifs__items{width:100%;gap:0 20px;padding-top:20px}.tarrifs__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:relative}.tarrifs__item .tarrifs__item__name{font:24px/28px GTEestiProBold;text-align:justify;position:absolute;top:-20px;left:50px;background:0 0}.tarrifs__item:first-child{padding-right:10px}.tarrifs__item:first-child .tarrifs__item__span{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:0 10px;font-family:GTEestiProBold}.tarrifs__item:first-child .tarrifs__item__span:first-child{padding-bottom:8px}.tarrifs__item:first-child .tarrifs__item__span:nth-child(2){padding-bottom:12px}.tarrifs__item:first-child .tarrifs__item__span:nth-child(3){padding:12px 0}.tarrifs__item:first-child .tarrifs__item__span:last-child{border-bottom:none;padding-bottom:35px}.tarrifs__item:nth-child(n+2){border:1px solid #fff;border-top:none;border-radius:17px;padding:50px 20px 25px;position:relative}.tarrifs__item:nth-child(n+2)::before{background:url(../img/tarrifs__border.png) no-repeat 0 0/cover;content:"";position:absolute;top:0;left:-1px;width:287px;height:300px;display:block}.tarrifs__item:nth-child(n+2) .tarrifs__item__span:first-child{padding:10px 0}.tarrifs__item__span{font-weight:400;font-size:22px;line-height:100%;text-align:justify;color:#fff;padding:20px 0;border-bottom:1px solid rgba(255,255,255,.15);width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.tarrifs__item__span.tarrifs__item-border{width:245px;padding:5px 0}.tarrifs__item__span.tarrifs__item-border:nth-child(5){padding-bottom:25px}.tarrifs__item__span.tarrifs__item-border:nth-child(5n){border-bottom:none}.tarrifs__item__span.tarrifs__item-border.item__impthy img{opacity:0}.tarrifs__item__span.tarrifs__item__price{border-bottom:none}.tarrifs__item__span.tarrifs__item__price a{font:19px/22px GTEestiProBold;text-decoration:none;background:#fff;width:-webkit-max-content;width:-moz-max-content;width:max-content;border-radius:36px;padding:5px 44px;color:#3c1150}.tarrifs__bottom__texts{padding:65px 0 45px}.tarrifs__bottom__text01{font:24px/28px GTEestiProLight;text-align:center}.tarrifs__bottom__text02{font:24px/28px GTEestiProBold;text-align:center}.tarrifs__bottom__text02 span{color:#33caff}.tarrifs__reg__btn{font:16px/19px GTEestiProBold;background:#33caff;padding:15px 67px;border-radius:10px;text-decoration:none;color:#fff}.clientAcc__block .clientA__titles,.tarrifs .tarrifs__bottom{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.clientAcc__block{padding-top:72px}.clientAcc__block .clientA__titles{text-align:center;margin-bottom:75px}.clientAcc__block .clientA__titles .clientA_mainTitle{margin-top:0;margin-bottom:20px}.clientAcc__block .clientA__accordion .accordion{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:20px}.clientAcc__block .clientA__accordion .accordion .accordiion__sides{display:-webkit-box;display:-ms-flexbox;display:flex;gap:0 20px;width:100%}.clientAcc__block .clientA__accordion .accordion .accordiion__sides .accordion__L__side,.clientAcc__block .clientA__accordion .accordion .accordiion__sides .accordion__R__side{width:calc(50% - 10px);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:20px 0}.clientAcc__block .clientA__accordion .accordion__item{background:0 0;position:relative;display:block;border-radius:17px;width:100%}.clientAcc__block .clientA__accordion .accordion__item .acc__bg,.clientAcc__block .clientA__accordion .accordion__item .acc__bg02{background:#33caff;display:block;width:32px;height:4px;border-radius:5px;position:absolute;top:35px;right:5%;z-index:2;rotate:0deg}.clientAcc__block .clientA__accordion .accordion__item .acc__bg02{rotate:90deg;-webkit-transition:all .3s ease;-o-transition:all .3s ease;transition:all .3s ease}.clientAcc__block .clientA__accordion .accordion__item .acc__bg02.rotate{rotate:0deg}.clientAcc__block .clientA__accordion .accordion__item .accordion__title{position:relative;display:block;padding:21px 0 21px 42px;font-size:24px;line-height:28px;text-align:justify;margin-bottom:2px;color:#fff;text-decoration:none;cursor:pointer;border:1px solid #fff;border-radius:17px}.clientAcc__block .clientA__accordion .accordion__item .accordion__content{font-size:16px;line-height:19px;text-align:justify;color:#fff;padding:25px 0 10px;display:none}@supports (-webkit-appearance:none){.hero__block::before{background-image:url(../img/hero__figure.webp)}.hero__blocks-cards::before{background-image:url(../img/hero__hands__with__laptop.webp)}.tarrifs__item:nth-child(n+2)::before{background-image:url(../img/tarrifs__border.webp)}}@media (min-width:1200px){.container{margin:0 auto}}@media (min-width:1460px){.container{width:1440px;margin:0 auto}}@media (max-width:1440px){.container{padding:0 10px;margin:0 auto}header .header__block .header__sides{gap:30px}}@media (max-width:1200px){.footer{padding-bottom:60px}.footer__block::after{content:"";display:block;background-image:url(../img/footer__Graph.png);background-size:cover;width:200px;height:150px;left:45%}.footer__subtitle{font-size:14px;line-height:16px}.footer__sides{padding-top:40px;margin-bottom:60px}.footer__R__feedback{font-size:14px;line-height:16px}.clientAcc__block .clientA__accordion .accordion,.footer__feedback-name__tel{gap:10px}.footer__feedback-name,.footer__feedback-tel{width:250px;padding:15px 0 15px 20px}.footer__feedback-tel{width:270px}.footer__feedback-text{width:530px;height:195px;margin:20px 0;padding:15px 0 0 15px}.footer__feedback-btn{padding:15px 80px;font-size:14px;line-height:16px}.footer__L-mail,.footer__L-tg{font-size:28px;line-height:32px}.footer__L-tg{margin:5px 0 15px}.footer__socmedia img{width:45px}.footer__B__links-link,header .header__block .header__l__side .header__nav-menu .header__lists .header__list .header__list__link{font-size:14px;line-height:16px}header .header__block .header__l__side .header__nav-menu .header__lists{gap:0 25px}header .header__block .header__r__side .header__r__links{gap:0 15px}header .header__block .header__r__side .header__r__links .dropdown.header__R__side__change__langList{display:none}.hero__block::before{content:"";display:inline;width:270px;height:250px;background-image:url(../img/hero__figure.png);background-size:cover;top:30px;right:80px}.hero__main__title{margin:45px 0 45px 40px;font-size:69px}.hero__blocks{margin-left:40px}.hero__blocks-cards{gap:0 18px}.hero__blocks-cards::before{width:300px;height:300px;right:-55px;top:10px}.hero__blocks-card{padding:25px 15px 30px;max-width:245px}.hero__card__text{font-size:14px;line-height:16px;font-weight:350}.container{margin:0 auto}.news{padding-bottom:60px}.news::after,.tarrifs::after{content:"";background-size:cover}.news::after{background-image:url(../img/news__img_grad.png);width:120px;height:80px;top:-120px}.news__cards{margin-top:30px;gap:0 10px}.news__time{font-size:14px;line-height:16px;margin-bottom:20px}.news__title{font-size:28px;line-height:32px}.news__text{font-size:14px;line-height:16px}.newsMain-name{font-size:54px;line-height:64px}.newsMain__content-text{font-size:14px;line-height:16px}.newsMain__content-img,.newsMain__content-sides .newsMain__content-text{width:50%}.newsmain__Navigation{padding:80px 0 50px}.swiper-button-next.newsMain-next{top:var(--swiper-navigation-top-offset, 52%);right:var(--swiper-navigation-sides-offset, 120px)}.swiper-button-prev.newsMain-prev{top:var(--swiper-navigation-top-offset, 52%);left:var(--swiper-navigation-sides-offset, 120px)}.our__possibilities__cards{padding:40px 0 20px;gap:15px}.our__possibilities__card{height:225px}.our__possibilities__card__top-span{font-size:24px;line-height:32px}.our__possibilities__card__top-img{width:90%}.our__possibilities__card__text{font-size:14px;line-height:16px}.our__possibilities__links__card{margin-bottom:35px}.our__possibilities__links__list{width:100%}.our__possibilities__link__list-link{font-size:14px;line-height:16px}.reviews__img{width:130px;left:40px;top:-51px}.reviews__block__name{font-size:28px;line-height:32px}.reviews__block__job{margin:5px 0 20px}.reviews__block__job,.reviews__block__text{font-size:14px;line-height:16px}.swiper{padding-top:70px;padding-bottom:150px}.swiper-slide{padding:20px 35px}.swiper-button-next{right:var(--swiper-navigation-sides-offset, -3px)}.swiper-button-next img,.swiper-button-prev img{width:120px}.swiper-button-prev{left:var(--swiper-navigation-sides-offset, -3px)}.swiper-button-next,.swiper-button-prev{top:var(--swiper-navigation-top-offset, 40%)}.main__title{font-size:54px;line-height:64px}.tarrifs::after{width:400px;height:390px;right:-50px;bottom:-100px;background-image:url(../img/tarrifs__bg__figure.png)}.tarrifs__items{overflow-x:scroll}.tarrifs__bottom__text02{font-size:20px;line-height:24px}.clientAcc__block .clientA__accordion .accordion .accordiion__sides{gap:0 10px}.clientAcc__block .clientA__accordion .accordion .accordiion__sides .accordion__L__side,.clientAcc__block .clientA__accordion .accordion .accordiion__sides .accordion__R__side{gap:15px 0}.clientAcc__block .clientA__accordion .accordion__item .acc__bg,.clientAcc__block .clientA__accordion .accordion__item .acc__bg02{width:25px;top:25px}.clientAcc__block .clientA__accordion .accordion__item .accordion__title{padding:15px 0 15px 35px;font-size:18px;line-height:24px}.clientAcc__block .clientA__accordion .accordion__item .accordion__content{font-size:14px;line-height:16px;padding:25px 5px 10px}}@media (max-width:1023px){header .header__block .header__sides{gap:10px}header .header__block .header__l__side{gap:20px}header .header__block .header__l__side .header__nav-menu .header__lists{display:none}header .header__block .header__l__side .header__nav-menu .header__lists.active{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:10px;position:fixed;top:80px;right:40px;z-index:20;padding:10px 20px;background:#1a136d;border-radius:10px}header .header__block .header__r__side .header__r__links a{font-size:16px;line-height:120%}header .header__block .header__r__side .header__r__links .header__sign__in,header .header__block .header__r__side .header__r__links .header__sign__up{padding:10px 35px}header .header__block .header__r__side .header__hamburger{display:block}.container{width:100%}.main__title,.newsMain-name{font-size:48px;line-height:56px}}@media (max-width:1023px) and (max-width:1023px){header .header__block .header__l__side .header__nav-menu .header__lists.active{top:85px;right:30px}}@media (max-width:1023px) and (max-width:720px){header .header__block .header__l__side .header__nav-menu .header__lists.active{top:90px;right:30px}}@media (max-width:1023px) and (max-width:460px){header .header__block .header__l__side .header__nav-menu .header__lists.active{top:70px;right:30px}}@media (max-width:840px){.footer__block::after{width:180px;height:130px;left:60%;bottom:50px}.footer__feedback-name{width:220px}.footer__feedback-tel{width:250px}.footer__feedback-text{width:480px;margin:10px 0}.footer__socmedia img{width:40px}.footer__B__links-link:last-child{padding-left:10px}.hero{padding-top:70px;padding-bottom:40px}.hero::after{top:910px;left:0}.hero__block::before{width:240px;height:225px;top:50px;right:10px}.hero__block::after{top:800px}.hero__main__title{font-size:65px}.hero__blocks-title{font-size:28px;line-height:30px}.hero__blocks-cards{gap:10px;-ms-flex-wrap:wrap;flex-wrap:wrap}.hero__blocks-card{padding:20px 10px 25px}.news__cards{-ms-flex-wrap:wrap;flex-wrap:wrap;gap:20px;margin-left:20px;margin-top:30px}.news__card{max-width:350px}.news__time,.news__title{margin-bottom:10px}.newsMain__content{gap:0}.newsMain__content-text{font-size:16px;line-height:21px}.newsMain__content-sides{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.newsMain__content-img,.newsMain__content-sides .newsMain__content-text{width:100%}.newsmain__Navigation{padding:50px 0 30px}.swiper-button-next.newsMain-next{top:var(--swiper-navigation-top-offset, 60%);right:var(--swiper-navigation-sides-offset, 100px)}.swiper-button-prev.newsMain-prev{top:var(--swiper-navigation-top-offset, 60%);left:var(--swiper-navigation-sides-offset, 100px)}.our__possibilities__card{height:250px}.wrapper .hero__mask__bg02{top:800px}.clientAcc__block{padding-top:50px}}@media (max-width:720px){.footer__block::after{width:150px;height:110px}.footer__feedback-name{width:200px}.footer__feedback-tel{width:220px}.footer__feedback-text{width:430px}.footer__feedback-btn{padding:15px 50px}.footer__L-mail,.footer__L-tg{font-size:24px;line-height:28px}.footer__socmedia img{width:35px}.footer__B__copyright{font-size:14px;line-height:16px}header .header__block .header__sides{gap:0}header .header__block .header__r__side .registration__btns{display:none}header .header__block .header__r__side .registration__btns.active{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:10px;position:fixed;top:70px;right:20px;z-index:20;padding:10px;background:#1a136d;border-radius:10px}header .header__block .header__r__side .registration__man{display:block;cursor:pointer}.hero{padding-top:50px;padding-bottom:30px}.hero__block::before{top:40px;right:-20px}.hero__blocks-cards::before{top:200px}.container{padding:0 10px}.news__card{max-width:300px}.our__possibilities__card{max-width:100%;height:200px}.clientAcc__block{padding-top:35px}.clientAcc__block .clientA__accordion .accordion .accordiion__sides{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:15px}.clientAcc__block .clientA__accordion .accordion .accordiion__sides .accordion__L__side,.clientAcc__block .clientA__accordion .accordion .accordiion__sides .accordion__R__side{width:100%}}@media (max-width:720px) and (max-width:720px){header .header__block .header__r__side .registration__btns.active{top:90px;right:30px}}@media (max-width:720px) and (max-width:460px){header .header__block .header__r__side .registration__btns.active{top:70px;right:30px}}@media (max-width:460px){.footer__sides{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:20px 0;padding-top:30px;margin-bottom:30px}.footer__feedback-name,.footer__feedback-tel,.footer__feedback-text{width:100%}.footer__feedback-btn{width:100%;padding:15px 0;text-align:center}.footer__L__side{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.footer__B__block{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.footer__B__copyright{margin-top:10px}.footer__B__links{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:10px 0}.footer__B__links-link:last-child{padding-left:0}header.is-sticky{padding:10px 20px}header .header__block .header__l__side .header__logo,header .header__block .header__l__side .header__logo .header__logo__img{width:115px;height:30px}header .header__block .header__r__side .header__r__links{gap:0 20px}header .header__block .header__r__side .header__hamburger,header .header__block .header__r__side .header__hamburger .header_hamburger-menu,header .header__block .header__r__side .header__hamburger .header_hamburger-menu svg{width:30px;height:30px}.hero{padding-top:0;padding-bottom:160px}.hero__block::before{top:230px;right:-70px}.hero__main__title{margin-bottom:90px;margin-left:5px;font-size:58px;line-height:100%}.hero__main__title br{display:none}.hero__blocks{margin-left:0}.hero__blocks-title{font-size:20px;line-height:23px}.hero__blocks-title br{display:block}.hero__blocks-cards{padding-top:95px}.hero__blocks-cards::before{width:350px;height:380px;top:500px;right:-30px}.hero__blocks-card{padding:20px 20px 30px;max-width:100%;width:100%}.container{min-width:320px}.newsMain-name{font-size:36px;line-height:42px}.newsMain__content-text{font-size:14px;line-height:19px}.swiper-button-next.newsMain-next{top:var(--swiper-navigation-top-offset, 54%);right:var(--swiper-navigation-sides-offset, 90px)}.swiper-button-next.newsMain-next span,.swiper-button-prev.newsMain-prev span{opacity:0}.swiper-button-prev.newsMain-prev{top:var(--swiper-navigation-top-offset, 54%);left:var(--swiper-navigation-sides-offset, 90px)}.our__possibilities__card{height:250px}.our__possibilities__card__top-img{width:70%}.our__possibilities__links__card{padding:20px 10px;margin-bottom:25px}.our__possibilities__links__list{width:100%}.our__possibilities__link__list-link{padding:5px 25px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */